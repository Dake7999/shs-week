// Enter Spreadsheet ID here
var SS = SpreadsheetApp.openById('179lQaIwESVADBd8jwo0P25IiTWiJ5MWAe5ARJNS8VB8');
var timezone = SpreadsheetApp.getActive().getSpreadsheetTimeZone();

function doPost(e) {
  var parsedData;
  try {
    parsedData = JSON.parse(e.postData.contents);
  } catch (f) {
    return ContentService.createTextOutput("Error in parsing request body: " + f.message);
  }
  
  if (!parsedData) {
    return ContentService.createTextOutput("Error! Request body empty or in incorrect format.");
  }
  
  // Retrieve data from payload
  var dataArr = parsedData.values.split(",");
  var studentID = dataArr[0];
  var firstName = dataArr[1];
  var lastName = dataArr[2];
  var grade = dataArr[3];
  var section = dataArr[4];
  
  // Set current time and date
  var Curr_Time = Utilities.formatDate(new Date(), timezone, "HH:mm:ss");
  var Curr_Date = Utilities.formatDate(new Date(), timezone, "MM/dd/yyyy");
  var checkInTime = new Date();  // Current Date object
  
  // Define time thresholds
  var thresholdMorning = new Date();
  thresholdMorning.setHours(7, 30, 0);
  var thresholdLoginInvalid = new Date();
  thresholdLoginInvalid.setHours(16, 0, 0);
  
  // Get the two sheets by name
  var attendanceSheet = SS.getSheetByName("Attendance");
  var loginLogoutSheet = SS.getSheetByName("LoginLogout");
  
  // STEP 1: Check if student already has an attendance record for today on Sheet1
  var attendanceData = attendanceSheet.getDataRange().getValues();
  var attendanceFound = false;
  for (var i = 0; i < attendanceData.length; i++) {
    // Assuming Column A holds studentID and Column D holds the date
    if (attendanceData[i][0] == studentID && attendanceData[i][3] == Curr_Date) {
      attendanceFound = true;
      break;
    }
  }
  
  // If no attendance record exists, this is the first tap
  if (!attendanceFound) {
    var attendanceStatus = (checkInTime < thresholdMorning) ? "Present" : "Tardy";
    // Insert a new row at the top (below header) on Sheet1
    attendanceSheet.insertRows(2);
    attendanceSheet.getRange("A2").setValue(studentID);
    attendanceSheet.getRange("B2").setValue(Curr_Time);
    attendanceSheet.getRange("D2").setValue(Curr_Date);
    attendanceSheet.getRange("E2").setValue(firstName);
    attendanceSheet.getRange("F2").setValue(lastName);
    attendanceSheet.getRange("G2").setValue(grade);
    attendanceSheet.getRange("H2").setValue(section);
    attendanceSheet.getRange("I2").setValue(attendanceStatus);
    SpreadsheetApp.flush();
    return ContentService.createTextOutput("Attendance logged: " + attendanceStatus);
  }
  
  // STEP 2: For subsequent taps, log to Sheet2 (LoginLogout)
  // Get all login/logout records for this student for today from Sheet2
  var loginData = loginLogoutSheet.getDataRange().getValues();
  var studentLoginCount = 0;
  for (var j = 0; j < loginData.length; j++) {
    // Assuming Column A has studentID and Column C has the date on Sheet2
    if (loginData[j][0] == studentID && loginData[j][2] == Curr_Date) {
      studentLoginCount++;
    }
  }
  
  // Determine next action based on count:
  // If count is even (0,2,4,...), next record is "Logout"
  // If odd (1,3,5,...), next record is "Login"
  var nextAction = (studentLoginCount % 2 === 0) ? "Logout" : "Login";
  
  // Check if login is attempted after 4:00 PM.
  if (nextAction === "Login" && checkInTime >= thresholdLoginInvalid) {
    return ContentService.createTextOutput("Invalid: Login after 4:00 PM");
  }
  
  // Insert new record into Sheet2 at top (below header)
  loginLogoutSheet.insertRows(2);
  // Record: Column A: studentID, Column B: time, Column C: date, Column D: action
  loginLogoutSheet.getRange("A2").setValue(studentID);
  loginLogoutSheet.getRange("B2").setValue(Curr_Time);
  loginLogoutSheet.getRange("C2").setValue(Curr_Date);
  loginLogoutSheet.getRange("D2").setValue(nextAction);
  
  SpreadsheetApp.flush();
  return ContentService.createTextOutput("LoginLogout recorded: " + nextAction);
}
